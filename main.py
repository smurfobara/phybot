import telebot
bot = telebot.TeleBot("6565221179:AAFBJrOeJBV9rjP_NGarCKNtXqR-yp0_EU4")
#bot = telebot.TeleBot("7107331036:AAF0-AgnOPA5_UTEprnfQ3YznRFau15sLdE")
from telebot import types
import textes
import time

VERSION = "0.5 Beta"


listMessages = []

txt = open("users.txt")
contenttext = txt.read()
txt.close()

@bot.message_handler(commands=["start"])
def start(message):
    with open("users.txt", "a") as k:
        with open("users.txt") as s:
            contenttxt = s.read()
            finding = contenttxt.find(str(message.from_user.id))
            if int(finding) == -1:
                print(message.chat.id, file=k)
                print(f"appended!")
    s.close()
    k.close()
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–°–ø–∏—Å–æ–∫ —Å–∏–ª", callback_data="listOfPowers")
    btn2 = types.InlineKeyboardButton("[–ù–û–í–û–ï] –ü–æ–∏—Å–∫", callback_data="find")
    btn3 = types.InlineKeyboardButton("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–∞–≤–ª–µ–Ω–∏—è, –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∏ —Å–∏–ª—ã", callback_data="calculator")
    btn4 = types.InlineKeyboardButton("–û —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –±–æ—Ç–∞", callback_data="development")
    btn5 = types.InlineKeyboardButton("–°–ø–∏—Å–æ–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π", callback_data="listOfOprs")
    markup.row(btn1, btn5)
    markup.row(btn2)
    markup.row(btn3)
    markup.row(btn4)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!üôå\n –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å —Ñ–∏–∑–∏–∫–æ–π! –í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ üëáüëá", reply_markup=markup)
    
""" @bot.message_handler(commands=["calculatedensity"])
def massa(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –≤ –∫–≥ –Ω–∞ –º¬≥")
    time.sleep(10)
    bot.message_handler()
    density = int(message.text)
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –æ–±—ä–µ–º –≤ –º¬≥") 
    V = int(message.text)
    answer = density * V
    bot.send_message(message.chat.id, f"–ú–∞—Å—Å–∞ —Ä–∞–≤–Ω–∞ {answer} –∫–≥.") """


@bot.message_handler(commands=["find"])
def finding(message):
    text = str(message.text)
    text = text.lower()
    lines = text.split()
    listPowers = textes.listPowers
    listOprs = textes.listOprs
    isfinded = None
    del lines[0]
    if len(lines) == 0:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç–µ—Å—å –Ω–∞–π—Ç–∏ /find [—Ç–µ–∫—Å—Ç]")
    else:
        for word in lines:
            print("word in lines")
            for line in listPowers:
                print("line in textes")
                if word in line:
                    print("word in line")
                    bot.send_message(message.chat.id, line)
                    isfinded = True
                    print (isfinded)
                    break
        for word in lines:
            for line in listOprs:
                if word in line:
                    bot.send_message(message.chat.id, line)
                    break
        


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    listOprs = textes.listOprs
    listPowers = textes.listPowers
    if callback.data == "listOfPowers":
        bot.send_message(callback.message.chat.id, "–°–ø–∏—Å–æ–∫ —Å–∏–ª (–ø–æ–∫–∞ –Ω–µ –ø–æ–ª–Ω—ã–π)üëáüëáüëá")
        for index in listPowers:
            bot.send_message(callback.message.chat.id, index)
        bot.send_message(callback.message.chat.id, "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—åüëâ /start")
    elif callback.data == "find":
        bot.send_message(callback.message.chat.id, "–ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø–æ–∏—Å–∫! –ü–æ–∫–∞ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –æ—á–µ–Ω—å —Å—Ç–∞–±–∏–ª—å–Ω–æ, –Ω–æ –≤ –±—É–¥—É—â–µ–º –≤—Å–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—Å—è! \n –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ /find –∏ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç–µ—Å—å –Ω–∞–π—Ç–∏.")
    elif callback.data == "calculator":
        bot.send_message(callback.message.chat.id, '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è "Coming soon..."')
    elif callback.data == "development":
        bot.send_message(callback.message.chat.id, f"–†–∞–∑–≤–∏–≤–∞—é –±–æ—Ç –≤ –æ–¥–∏–Ω–æ—á–∫—É, –ø–æ –º–µ—Ä–µ —Å–∏–ª –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –í–µ—Ä—Å–∏—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {VERSION} \n –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é: @smurfobara")
        bot.send_message(callback.message.chat.id, f"–°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ –≤–µ—Ä—Å–∏—é {VERSION}: \n –ü–µ—Ä–µ—Ö–æ–¥ –≤ Beta \n –î–æ–±–∞–≤–ª–µ–Ω —Ä–∞–∑–¥–µ–ª '–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è' \n –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏ —É–ª—É—á—à–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∏—Å–∫–∞ \n –î–æ—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞")
    elif callback.data == "listOfOprs":
        bot.send_message(callback.message.chat.id, "–°–ø–∏—Å–æ–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π (–ø–æ–∫–∞ –Ω–µ –ø–æ–ª–Ω—ã–π)üëáüëáüëá")
        for index in listOprs:
            bot.send_message(callback.message.chat.id, index)
        bot.send_message(callback.message.chat.id, "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—åüëâ /start")
        



@bot.message_handler(commands=["botclosing"])
def closing(message):
    global contenttext
    if message.from_user.id == 5893427261:
        with open("users.txt", "r") as l:
            contenttext = l.read()
            listoftext = contenttext.split()
        for listitem in listoftext:
            bot.send_message(listitem, "–ë–æ—Ç –±—É–¥–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º. –î–ª—è —Å–≤—è–∑–∏: @smurfobara")
        l.close()

@bot.message_handler(commands=["botopening"])
def closing(message):
    global contenttext
    if message.from_user.id == 5893427261:
        with open("users.txt", "r") as l:
            contenttext = l.read()
            listoftext = contenttext.split()
        for listitem in listoftext:
            bot.send_message(listitem, "–ë–æ—Ç —Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç‚úÖ")
        l.close()

@bot.message_handler(commands=["sendtxt"])
def sendtxt(message):
    if message.from_user.id == 5893427261:
        file = open("users.txt", "rb")
        bot.send_document(message.chat.id, file)
        file.close()

@bot.message_handler(commands=["sendmsgusers"])
def sendmessage(message):
    if message.from_user.id == 5893427261:
        text = message.text
        listtext = text.split()
        with open("users.txt", "r") as l:
            contenttext = l.read()
            listoftext = contenttext.split()
        del listtext[0]
        stringline = " ".join(listtext)
        for listitem in listoftext:
            print(listitem)
            print(listoftext)
            bot.send_message(listitem, stringline)
        l.close()
        bot.send_message(5893427261, "–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

bot.polling(none_stop=True)
